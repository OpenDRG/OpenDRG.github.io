(()=>{"use strict";Object.freeze({CHECK_FAILED:"信息校验不通过",SUCCESS:"分组成功",FAIL:"无法入组",ZD_NOT_MAPPING:"诊断不能转换为分组器支持的编码",SS_NOT_MAPPING:"手术操作不能转换为分组器支持的编码",ZD_NOT_VALID:"诊断不是有效的ICD编码",SS_NOT_VALID:"手术操作不是有效的ICD编码",QY:"歧义病案",ZD_NOT_MATCH_GENDER:"主诊断与病人性别不相符",MAIN_ZD_NOT_MDC:"主诊断不在所有MDC的主诊表内",SS_ERROR:"手术选择错误",NEWBORN_ERROR:"新生儿诊断或手术错误"}),String.prototype.format=function(){if(0===arguments.length)return this;let e=this;if(1===arguments.length&&"object"==typeof arguments[0])for(let t in arguments[0])void 0!==arguments[0][t]&&(e=e.replace(new RegExp("({"+t+"})","g"),arguments[0][t]));else for(let t=0;t<arguments.length;t++)void 0!==arguments[t]&&(e=e.replace(new RegExp("({["+t+"]})","g"),arguments[t]));return e.toString()},String.prototype.replaceAll=function(e,t){return this.replace(new RegExp(e,"g"),t)},String.prototype.replaceCsv=function(){let e,t=this,r=new RegExp('"(.*?)"',"g");for(;e=r.exec(this);)t=t.replace(e[0],e[1].replaceAll(",","|"));return t}})();